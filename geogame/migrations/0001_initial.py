# Generated by Django 3.1.6 on 2021-02-15 22:53

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
from django.contrib.postgres.operations import CreateExtension
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # CreateExtension('postgis'),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('difficulty', models.PositiveSmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=8, unique=True)),
                ('category', models.PositiveSmallIntegerField(choices=[(1, 'eXplo'), (2, 'Temerari'), (3, 'Seniori')])),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=6)),
                ('scoring_type', models.PositiveSmallIntegerField(choices=[(1, 'Multe puncte la început, tot mai puține apoi'), (2, 'Putine puncte la început, tot mai multe apoi'), (3, 'Puncte proportional cu posesia')])),
            ],
        ),
        migrations.CreateModel(
            name='Tower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('category', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField()),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geogame.zone')),
            ],
        ),
        migrations.CreateModel(
            name='TeamTowerOwnership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_start', models.DateTimeField(auto_now_add=True)),
                ('timestamp_end', models.DateTimeField(blank=True, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geogame.team')),
                ('tower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geogame.tower')),
            ],
        ),
        migrations.CreateModel(
            name='TeamTowerChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_submitted', models.DateTimeField(auto_now_add=True)),
                ('timestamp_verified', models.DateTimeField(blank=True, null=True)),
                ('outcome', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Confirmat'), (2, 'Respins')], null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geogame.challenge')),
                ('checked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geogame.team')),
                ('tower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geogame.tower')),
            ],
        ),
        migrations.AddField(
            model_name='challenge',
            name='tower',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geogame.tower'),
        ),
    ]
